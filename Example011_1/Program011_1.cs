/*В примере ранее мы указывали значение массива вручную. 
А сейчас перепишем этот код с использованием генератора псевдослучайных чисел 
с использованием методов. Мы потренируем то, 
1) каким образом можно взять метод 
2) передать в него массив  
3) заполнить массив нужным количеством элементов. 
4) опишем метод, который будет выводить все элементы по порядку. 
5) Затем превратим наш код поиска нужного индекса в метод.

Сначала определим новый массив. Пусть это будет массив под именем array. 
Далее укажем, что в этом массиве будет по умолчанию 10 элементов. 
Запомним новую конструкцию new int [10], которая означает «создай новый массив, 
где будет 10 элементов». По умолчанию он будет наполнен нулями.
*/
//  int[] array = new int[10]; 
/*---------------------------------------------------------------------*/
// метод заполнения массива - FillArray

void FillArray(int[] collection) //аргумент массив - collection
{
    int length = collection.Length; //получить длину нашего массива
    int index = 0;
    while (index < length)
    {   /*После этого обратимся к аргументу collection на позицию index 
          и положим туда новое случайное число — целое число из диапазона 1–10.*/
        collection[index] = new Random().Next(1, 10);
        //index = index + 1;
        index++;
    }
}
/*-----------------------------------------------------------------------*/
// метод void - PrintArray, который будет печатать массив. 

void PrintArray(int[] col)// <-в качестве аргумента здесь массив. - col
/*в первом случае будет collection, а во втором, например, col:
 |void FillArray(int[] collection) | void PrintArray(int[] col) |   */
{
    int count = col.Length;
    int position = 0;
    while (position < count)
    {
        Console.WriteLine(col[position]);
        position++;
    }
}
/*    --- VOID ---
в контексте языка С# есть методы, которые могут возвращать или не возвращать какие-то значения. 
Если метод ничего не возвращает, он называется void-методом. 
в этом случае в коде оператор return,не используется.
*/
int[] array = new int[10];
FillArray(array);
PrintArray(array);



